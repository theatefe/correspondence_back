# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
# include /etc/letsencrypt/le_http_01_cert_challenge.conf;
server_names_hash_bucket_size 128;

	
	  gzip on;
	  gzip_min_length  500;
	  gzip_proxied     any;
	  gzip_comp_level 4;
	  gzip_types  text/css text/javascript text/xml text/plain text/x-component application/javascript application/json application/xml application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;
	  gzip_vary on;
	  gzip_disable     "msie6";

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log off;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;


    server {

    

    server_name ehghagh.com; # managed by Certbot

        root         /usr/share/nginx/html;
        client_max_body_size 100M;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;
	location /office {
	proxy_pass http://127.0.0.1:8082;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
	proxy_set_header X-Real-IP $remote_addr; 
	proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
	proxy_read_timeout 120s;
        }
       
	 location / {
	proxy_pass http://127.0.0.1:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
	proxy_set_header X-Real-IP $remote_addr; 
	proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Connection 'Upgrade';
        proxy_set_header Host $host;
	proxy_read_timeout 120s;
        }

	

	

	location /phpmyadmin {
	proxy_pass http://127.0.0.1:8443/phpmyadmin;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        }
	location /php{
	proxy_pass http://127.0.0.1:8443/php;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    
    
    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/ehghagh.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/ehghagh.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}

    server {
    if ($host = ehghagh.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen       80 ;
        listen       [::]:80 ;
    server_name ehghagh.com;
    return 404; # managed by Certbot


}

    server {
    server_name www.ehghagh.com; # managed by Certbot
	return 301 $scheme://ehghagh.com$request_uri;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;
	

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/ehghagh.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/ehghagh.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


    server {
    server_name www.ehghagh.com; # managed by Certbot
	return 301 $scheme://ehghagh.com$request_uri;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;
	

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/ehghagh.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/ehghagh.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

    server {

    if ($host = www.ehghagh.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen       80 ;
        listen       [::]:80 ;
    server_name www.ehghagh.com;
    return 404; # managed by Certbot


}

server {

    

        server_name instagramdownloader.ir; # managed by Certbot

        root         /usr/share/nginx/html;

       
        location / {
	proxy_pass http://127.0.0.1:2897;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
	proxy_set_header X-Real-IP $remote_addr; 
	proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
	proxy_read_timeout 120s;
        }
	
    

    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/instagramdownloader.ir/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/instagramdownloader.ir/privkey.pem; # managed by Certbot
  


}

    server {


    
        return 301 https://instagramdownloader.ir$request_uri;
    


        listen       80 ;
        listen       [::]:80 ;
    server_name instagramdownloader.ir;
    return 404; # managed by Certbot



}

server {
    server_name www.instagramdownloader.ir; # managed by Certbot
	return 301 $scheme://instagramdownloader.ir$request_uri;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;
	

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/instagramdownloader.ir/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/instagramdownloader.ir/privkey.pem; # managed by Certbot
    

}

server {

        return 301 https://instagramdownloader.ir$request_uri;


        listen       80 ;
        listen       [::]:80 ;
    server_name www.instagramdownloader.ir;
    return 404; # managed by Certbot


}

server {

    

        server_name iranpakhshsazeh.ir; # managed by Certbot

        root         /usr/share/nginx/html;

       
        location / {
	proxy_pass http://127.0.0.1:3597;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
	proxy_set_header X-Real-IP $remote_addr; 
	proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        }
	
    

    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/iranpakhshsazeh.ir/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/iranpakhshsazeh.ir/privkey.pem; # managed by Certbot
  


}

    server {
    
        return 301 https://iranpakhshsazeh.ir$request_uri;
    


        listen       80 ;
        listen       [::]:80 ;
    server_name iranpakhshsazeh.ir;
    return 404; # managed by Certbot


}

server {
    server_name www.iranpakhshsazeh.ir; # managed by Certbot
	return 301 $scheme://iranpakhshsazeh.ir$request_uri;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;
	

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/iranpakhshsazeh.ir/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/iranpakhshsazeh.ir/privkey.pem; # managed by Certbot
    

}

server {

        return 301 https://iranpakhshsazeh.ir$request_uri;


        listen       80 ;
        listen       [::]:80 ;
    server_name www.iranpakhshsazeh.ir;
    return 404; # managed by Certbot


}
server {

    

        server_name dadgram.ir; # managed by Certbot
        


        root         /usr/share/nginx/html;

       
        location / {
	proxy_pass http://127.0.0.1:2898;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
	proxy_set_header X-Real-IP $remote_addr; 
	proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
	proxy_read_timeout 120s;

        }
	location /articles{
	proxy_pass http://127.0.0.1:3258;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
	proxy_set_header X-Real-IP $remote_addr; 
	proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        }
	
    
    client_max_body_size 100M;
    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/dadgram.ir/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/dadgram.ir/privkey.pem; # managed by Certbot
  


}

    server {


    
        return 301 https://dadgram.ir$request_uri;
    


        listen       80 ;
        listen       [::]:80 ;
    server_name dadgram.ir;
    return 404; # managed by Certbot



}

server {
    server_name www.dadgram.ir; # managed by Certbot
	return 301 $scheme://dadgram.ir$request_uri;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;
	

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    
    client_max_body_size 100M;

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/dadgram.ir/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/dadgram.ir/privkey.pem; # managed by Certbot
    

}

server {

        return 301 https://dadgram.ir$request_uri;


        listen       80 ;
        listen       [::]:80 ;
    server_name www.dadgram.ir;
    return 404; # managed by Certbot


}
server {

    

        server_name redclock.ir; # managed by Certbot

        root         /usr/share/nginx/html;

       
        location / {
	proxy_pass http://127.0.0.1:7354;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
	proxy_set_header X-Real-IP $remote_addr; 
	proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
	proxy_read_timeout 120s;

        }
	
    

    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/redclock.ir/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/redclock.ir/privkey.pem; # managed by Certbot
  


}

    server {


    
        return 301 https://redclock.ir$request_uri;
    


        listen       80 ;
        listen       [::]:80 ;
    server_name redclock.ir;
    return 404; # managed by Certbot



}

server {
    server_name www.redclock.ir; # managed by Certbot
	return 301 $scheme://redclock.ir$request_uri;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;
	

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/redclock.ir/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/redclock.ir/privkey.pem; # managed by Certbot
    

}

server {

        return 301 https://redclock.ir$request_uri;


        listen       80 ;
        listen       [::]:80 ;
    server_name www.redclock.ir;
    return 404; # managed by Certbot


}
server {

    

        server_name dipia.ir; # managed by Certbot

        root         /usr/share/nginx/html;

       
        location / {
		proxy_pass http://127.0.0.1:3598;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
		proxy_set_header X-Real-IP $remote_addr; 
		proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
	proxy_read_timeout 120s;

        }
	
    client_max_body_size 100M;

    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/dipia.ir/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/dipia.ir/privkey.pem; # managed by Certbot
  


}

    server {


    
        return 301 https://dipia.ir$request_uri;
    


        listen       80 ;
        listen       [::]:80 ;
    server_name dipia.ir;
    return 404; # managed by Certbot



}

server {
    server_name www.dipia.ir; # managed by Certbot
	return 301 $scheme://dipia.ir$request_uri;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;
	

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/dipia.ir/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/dipia.ir/privkey.pem; # managed by Certbot
    

}

server {

        return 301 https://dipia.ir$request_uri;


        listen       80 ;
        listen       [::]:80 ;
    server_name www.dipia.ir;
    return 404; # managed by Certbot


}




server {
    if ($host = www.dipiya.com) {
        return 301 https://dipia.ir$request_uri;
    } # managed by Certbot


    if ($host = dipiya.com) {
        return 301 https://dipia.ir$request_uri;
    } # managed by Certbot




        listen       80 ;
        listen       [::]:80 ;
    server_name www.dipiya.com dipiya.com;
    return 404; # managed by Certbot




}

server {

        return 301 https://dipia.ir$request_uri;
    server_name www.dipiya.ir dipiya.ir;
    return 404; # managed by Certbot



    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/dipiya.ir/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/dipiya.ir/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}




server {
    if ($host = www.dipiya.ir) {
        return 301 https://dipia.ir$request_uri;
    } # managed by Certbot


    if ($host = dipiya.ir) {
        return 301 https://dipia.ir$request_uri;
    } # managed by Certbot




        listen       80 ;
        listen       [::]:80 ;
    server_name www.dipiya.ir dipiya.ir;
    return 404; # managed by Certbot




}




server {

			

			server_name meshirt.ir; 

				#root         /usr/share/nginx/html;
			
		  
			location / {
				proxy_pass http://127.0.0.1:3698;
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection 'upgrade';
				proxy_set_header X-Real-IP $remote_addr;  # This line.
				proxy_set_header X-Forwarded-For $remote_addr;
				proxy_set_header Host $host;
				proxy_cache_bypass $http_upgrade;
				proxy_read_timeout 120s;

				}
			
				error_page 404 /404.html;
					location = /40x.html {
				}

				error_page 500 502 503 504 /50x.html;
					location = /50x.html {
				}
			

			listen 443 ssl http2; 
			ssl_certificate /etc/letsencrypt/live/meshirt.ir/fullchain.pem; 
			ssl_certificate_key /etc/letsencrypt/live/meshirt.ir/privkey.pem;

			   
		}
		server {


			
				return 301 https://meshirt.ir$request_uri;
			


				listen       80 ;
				listen       [::]:80 ;
				server_name meshirt.ir;
				return 404; 



		}
		server {


			
				return 301 https://meshirt.ir$request_uri;
			


				listen       80 ;
				listen       [::]:80 ;
				server_name www.meshirt.ir;
				return 404; 



		}
		server {
				server_name www.meshirt.ir; 
				return 301 $scheme://meshirt.ir$request_uri;
					root         /usr/share/nginx/html;

					# Load configuration files for the default server block.
					include /etc/nginx/default.d/*.conf;
				

					error_page 404 /404.html;
						location = /40x.html {
					}

					error_page 500 502 503 504 /50x.html;
						location = /50x.html {
					}
				

				listen [::]:443 ssl; 
				listen 443 ssl; 
				ssl_certificate /etc/letsencrypt/live/meshirt.ir/fullchain.pem; 
				ssl_certificate_key /etc/letsencrypt/live/meshirt.ir/privkey.pem; 
		

		}
		server {

    

        server_name arezou-omidvarkhoda.com; # managed by Certbot
        
return 301 https://ehghagh.com;


        root         /usr/share/nginx/html;

       
        location / {
		proxy_pass http://127.0.0.1:2899;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
		proxy_set_header X-Real-IP $remote_addr; 
		proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
	proxy_read_timeout 120s;

        }
	
    
    client_max_body_size 100M;
    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/arezou-omidvarkhoda.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/arezou-omidvarkhoda.com/privkey.pem; # managed by Certbot
  


}

    server {

return 301 https://ehghagh.com;

    
       # return 301 https://arezou-omidvarkhoda.com$request_uri;
    


        listen       80 ;
        listen       [::]:80 ;
    server_name arezou-omidvarkhoda.com;
    return 404; # managed by Certbot



}
    server {


    return 301 https://ehghagh.com;

       # return 301 https://arezou-omidvarkhoda.com$request_uri;
    


        listen       80 ;
        listen       [::]:80 ;
    server_name www.arezou-omidvarkhoda.com;
    return 404; # managed by Certbot



}

server {
return 301 https://ehghagh.com;

    server_name www.arezou-omidvarkhoda.com; # managed by Certbot
	# return 301 $scheme://arezou-omidvarkhoda.com$request_uri;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;
	

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    
    client_max_body_size 100M;

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/arezou-omidvarkhoda.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/arezou-omidvarkhoda.com/privkey.pem; # managed by Certbot
    

}
server {

        server_name dr-arezou-omidvarkhoda.com; 
        return 301 https://ehghagh.com;

       # return 301 https://arezou-omidvarkhoda.com$request_uri;
	
    
    client_max_body_size 100M;
    listen 443 ssl http2; 
    ssl_certificate /etc/letsencrypt/live/dr-arezou-omidvarkhoda.com/fullchain.pem; 
    ssl_certificate_key /etc/letsencrypt/live/dr-arezou-omidvarkhoda.com/privkey.pem; 
  
}

    server {
return 301 https://ehghagh.com;

       # return 301 https://arezou-omidvarkhoda.com$request_uri;
    
        listen       80 ;
        listen       [::]:80 ;
    server_name dr-arezou-omidvarkhoda.com;
    return 404; 

}
   server {
    return 301 https://ehghagh.com;

       # return 301 https://arezou-omidvarkhoda.com$request_uri;
    
        listen       80 ;
        listen       [::]:80 ;
    server_name www.dr-arezou-omidvarkhoda.com;
    return 404; 



}

server {
    server_name www.dr-arezou-omidvarkhoda.com; 
return 301 https://ehghagh.com;

	#return 301 $scheme://arezou-omidvarkhoda.com$request_uri;
       

    listen [::]:443 ssl; 
    listen 443 ssl; 
    ssl_certificate /etc/letsencrypt/live/dr-arezou-omidvarkhoda.com/fullchain.pem; 
    ssl_certificate_key /etc/letsencrypt/live/dr-arezou-omidvarkhoda.com/privkey.pem; 
    

}
server {

			

			server_name mirrortaj.com; 

				#root         /usr/share/nginx/html;
			
		  
			location / {
				proxy_pass http://127.0.0.1:3369;
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection 'upgrade';
				proxy_set_header X-Real-IP $remote_addr;  # This line.
				proxy_set_header X-Forwarded-For $remote_addr;
				proxy_set_header Host $host;
				proxy_cache_bypass $http_upgrade;
				proxy_read_timeout 120s;

				}
			
				error_page 404 /404.html;
					location = /40x.html {
				}

				error_page 500 502 503 504 /50x.html;
					location = /50x.html {
				}
			

			listen 443 ssl http2; 
			ssl_certificate /etc/letsencrypt/live/mirrortaj.com/fullchain.pem; 
			ssl_certificate_key /etc/letsencrypt/live/mirrortaj.com/privkey.pem;

			   
		}
		server {


			
				return 301 https://mirrortaj.com$request_uri;
			


				listen       80 ;
				listen       [::]:80 ;
				server_name mirrortaj.com;
				return 404; 



		}
		server {


			
				return 301 https://mirrortaj.com$request_uri;
			


				listen       80 ;
				listen       [::]:80 ;
				server_name www.mirrortaj.com;
				return 404; 



		}
		server {
				server_name www.mirrortaj.com; 
				return 301 $scheme://mirrortaj.com$request_uri;
					root         /usr/share/nginx/html;

					# Load configuration files for the default server block.
					include /etc/nginx/default.d/*.conf;
				

					error_page 404 /404.html;
						location = /40x.html {
					}

					error_page 500 502 503 504 /50x.html;
						location = /50x.html {
					}
				

				listen [::]:443 ssl; 
				listen 443 ssl; 
				ssl_certificate /etc/letsencrypt/live/mirrortaj.com/fullchain.pem; 
				ssl_certificate_key /etc/letsencrypt/live/mirrortaj.com/privkey.pem; 
		

		}

       include /etc/nginx/hosts/api.ehghagh.com.conf;
	include /etc/nginx/hosts/app.ehghagh.com.conf;


}